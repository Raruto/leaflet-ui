{"version":3,"file":"leaflet-ui.js","sources":["../src/leaflet-ui.js"],"sourcesContent":["import { version } from '../package.json';\r\n\r\nconst base_url = 'https://unpkg.com/';\r\n\r\nPromise.all([\r\n\t\timport(base_url + 'leaflet-i18n'),\r\n\t\timport(base_url + 'leaflet-rotate'),\r\n\t\timport(base_url + 'leaflet.locatecontrol'),\r\n\t\timport(base_url + 'leaflet.fullscreen'),\r\n\t\timport(base_url + 'leaflet-pegman'),\r\n\t\timport(base_url + '@raruto/leaflet-gesture-handling'),\r\n\t\timport(base_url + '@raruto/leaflet-edit-osm'),\r\n\t\timport(base_url + 'leaflet-control-layers-inline'),\r\n\t\timport(base_url + 'leaflet-minimap'),\r\n\t\timport(base_url + 'leaflet-loading'),\r\n\t\timport(base_url + 'leaflet-search'),\r\n\t\timport(base_url + 'leaflet-easyprint'),\r\n\t\timport(base_url + 'leaflet.control.resizer'),\r\n\t\timport(base_url + 'leaflet.visualclick')\r\n\t]).then(() => {\r\n\r\n\t\t/* Temporary fix for empty values evaluated as false (leaflet-i18n v0.3.1) */\r\n\t\t(function(){\r\n\t\t\tlet proto = L.i18n.bind({});\r\n\t\t\tL.i18n = L._ = (string, data) => {\r\n\t\t\t\tif (L.locale && L.locales[L.locale] && L.locales[L.locale][string] == \"\") {\r\n\t\t\t\t\tL.locales[L.locale][string] = \"\\u200B\";\r\n\t\t\t\t}\r\n\t\t\t\treturn proto.call(null, string, data);\r\n\t\t\t};\r\n\t\t})();\r\n\r\n\t\t(function() {\r\n\r\n\t\t\tconst currentScript = document.currentScript;\r\n\t\t\tconst currentVersion = version.split(\"+\")[0].trim();\r\n\r\n\t\t\tlet lazyLoader = {\r\n\r\n\t\t\t\tbaseURL: 'https://unpkg.com/',\r\n\r\n\t\t\t\t// Sequentially download multiple scripts.\r\n\t\t\t\tloadSyncScripts: function(urls) {\r\n\t\t\t\t\treturn urls.reduce((prev, curr) => prev.then(() => lazyLoader.loadAsyncScripts(curr)), Promise.resolve());\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Parallel download multiple scripts.\r\n\t\t\t\tloadAsyncScripts: function(urls) {\r\n\t\t\t\t\treturn Promise.all(urls.map((url) => lazyLoader.loadScript(url)));\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Dynamically load a single script.\r\n\t\t\t\tloadScript: function(url) {\r\n\t\t\t\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\t\t\t\tlet type = url.split('.').pop().split('?')[0];\r\n\t\t\t\t\t\tlet tag = type == 'css' ? 'link' : 'script';\r\n\t\t\t\t\t\tlet script = document.createElement(tag);\r\n\t\t\t\t\t\tlet head = document.head;\r\n\t\t\t\t\t\tlet root_script = (head.contains(currentScript) ? currentScript : head.lastChild) || head;\r\n\t\t\t\t\t\tlet prev_tag = lazyLoader[\"prev_\" + tag] || (tag == 'script' && lazyLoader.prev_link ? lazyLoader.prev_link : root_script);\r\n\t\t\t\t\t\tlet base_url = (url.indexOf(\".\") === 0 || url.indexOf(\"/\") === 0 || url.indexOf('http://') === 0 || url.indexOf('https://') === 0) ? '' : lazyLoader.baseURL;\r\n\r\n\t\t\t\t\t\tif (type == 'css') {\r\n\t\t\t\t\t\t\tscript.rel = 'stylesheet';\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tscript.addEventListener('load', resolve, { once: true });\r\n\t\t\t\t\t\tscript.setAttribute(type == 'css' ? 'href' : 'src', base_url + url);\r\n\r\n\t\t\t\t\t\tif (prev_tag.parentNode && prev_tag.nextSibling)\r\n\t\t\t\t\t\t\tprev_tag.parentNode.insertBefore(script, prev_tag.nextSibling);\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\thead.appendChild(script);\r\n\r\n\t\t\t\t\t\tlazyLoader[\"prev_\" + tag] = script;\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\t// You can ovveride them by passing one of the following to leaflet map constructor.\r\n\t\t\tlet default_options = {\r\n\t\t\t\tmapTypes: {\r\n\t\t\t\t\tatlas: {\r\n\t\t\t\t\t\tname: 'Atlas',\r\n\t\t\t\t\t\turl: 'https://{s}.tile.thunderforest.com/mobile-atlas/{z}/{x}/{y}.png',\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tmaxZoom: 24,\r\n\t\t\t\t\t\t\tmaxNativeZoom: 22,\r\n\t\t\t\t\t\t\tattribution: 'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> | Map style: &copy; <a href=\"http://www.thunderforest.com/\">Thunderforest</a>',\r\n\t\t\t\t\t\t\t// apikey: '<your apikey>',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tstreets: {\r\n\t\t\t\t\t\tname: 'Streets',\r\n\t\t\t\t\t\turl: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tmaxZoom: 24,\r\n\t\t\t\t\t\t\tmaxNativeZoom: 19,\r\n\t\t\t\t\t\t\tattribution: 'Map data: &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcycle: {\r\n\t\t\t\t\t\tname: 'Cycle',\r\n\t\t\t\t\t\turl: 'https://{s}.tile.thunderforest.com/cycle/{z}/{x}/{y}.png',\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tmaxZoom: 24,\r\n\t\t\t\t\t\t\tmaxNativeZoom: 22,\r\n\t\t\t\t\t\t\tattribution: 'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> | Map style: &copy; <a href=\"http://www.thunderforest.com/\">Thunderforest</a>',\r\n\t\t\t\t\t\t\t// apikey: '<your apikey>',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tterrain: {\r\n\t\t\t\t\t\tname: 'Terrain',\r\n\t\t\t\t\t\turl: 'https://{s}.tile.thunderforest.com/landscape/{z}/{x}/{y}.png',\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tmaxZoom: 24,\r\n\t\t\t\t\t\t\tmaxNativeZoom: 22,\r\n\t\t\t\t\t\t\tattribution: 'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> | Map style: &copy; <a href=\"http://www.thunderforest.com/\">Thunderforest</a>',\r\n\t\t\t\t\t\t\t// apikey: '<your apikey>',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsatellite: {\r\n\t\t\t\t\t\tname: 'Satellite',\r\n\t\t\t\t\t\turl: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tmaxZoom: 24,\r\n\t\t\t\t\t\t\tmaxNativeZoom: 18,\r\n\t\t\t\t\t\t\tattribution: 'Map data: &copy; <a href=\"http://www.esri.com/\">Esri</a> &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttopo: {\r\n\t\t\t\t\t\tname: 'Topo',\r\n\t\t\t\t\t\turl: 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png',\r\n\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\tmaxZoom: 24,\r\n\t\t\t\t\t\t\tmaxNativeZoom: 17,\r\n\t\t\t\t\t\t\tattribution: 'Map data: &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\tzoomControl: {\r\n\t\t\t\t\tposition: 'bottomright'\r\n\t\t\t\t},\r\n\t\t\t\trotateControl: {\r\n\t\t\t\t\tposition: 'bottomright',\r\n\t\t\t\t},\r\n\t\t\t\tscaleControl: {\r\n\t\t\t\t\twidth: 200,\r\n\t\t\t\t\tposition: 'bottomright',\r\n\t\t\t\t\timperial: false,\r\n\t\t\t\t},\r\n\t\t\t\tpegmanControl: {\r\n\t\t\t\t\tposition: 'bottomright',\r\n\t\t\t\t\ttheme: \"leaflet-pegman-v3-small\",\r\n\t\t\t\t},\r\n\t\t\t\tlocateControl: {\r\n\t\t\t\t\tposition: \"bottomright\"\r\n\t\t\t\t},\r\n\t\t\t\tfullscreenControl: {\r\n\t\t\t\t\tposition: 'topright',\r\n\t\t\t\t\ttitle: 'Enter Fullscreen',\r\n\t\t\t\t\ttitleCancel: 'Exit Fullscreen',\r\n\t\t\t\t\tforceSeparateButton: true,\r\n\t\t\t\t},\r\n\t\t\t\tlayersControl: {\r\n\t\t\t\t\tinline: true,\r\n\t\t\t\t\tposition: 'topleft'\r\n\t\t\t\t},\r\n\t\t\t\tminimapControl: {\r\n\t\t\t\t\tposition: 'bottomleft',\r\n\t\t\t\t\ttoggleDisplay: false,\r\n\t\t\t\t\ttoggleMapTypes: true, // Automatically switch between \"satellite\" and \"roads\" layers.\r\n\t\t\t\t\twidth: 75,\r\n\t\t\t\t\theight: 75,\r\n\t\t\t\t\taimingRectOptions: {\r\n\t\t\t\t\t\tcolor: '#000000',\r\n\t\t\t\t\t\tweight: 1,\r\n\t\t\t\t\t\topacity: 0,\r\n\t\t\t\t\t\tfillOpacity: 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tshadowRectOptions: {\r\n\t\t\t\t\t\tcolor: '#000000',\r\n\t\t\t\t\t\tweight: 1,\r\n\t\t\t\t\t\topacity: 0,\r\n\t\t\t\t\t\tfillOpacity: 0,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmapOptions: {\r\n\t\t\t\t\t\tmapTypeId: 'satellite',\r\n\t\t\t\t\t\tgestureHandling: false,\r\n\t\t\t\t\t\tsearchControl: false,\r\n\t\t\t\t\t\tloadingControl: false,\r\n\t\t\t\t\t\t_isMiniMap: true,\r\n\t\t\t\t\t\trotateControl: false\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\teditInOSMControl: {\r\n\t\t\t\t\tposition: \"bottomright\"\r\n\t\t\t\t},\r\n\t\t\t\tloadingControl: {\r\n\t\t\t\t\tseparate: true,\r\n\t\t\t\t\tposition: 'bottomright'\r\n\t\t\t\t},\r\n\t\t\t\tsearchControl: {\r\n\t\t\t\t\turl: 'https://nominatim.openstreetmap.org/search?format=json&accept-language={querylang}&q={s}',\r\n\t\t\t\t\tquerylang: 'en-US',\r\n\t\t\t\t\tdetectUserLang: true,\r\n\t\t\t\t\tjsonpParam: 'json_callback',\r\n\t\t\t\t\tpropertyName: 'display_name',\r\n\t\t\t\t\tpropertyLoc: ['lat', 'lon'],\r\n\t\t\t\t\tmarkerLocation: true,\r\n\t\t\t\t\tautoType: false,\r\n\t\t\t\t\tautoCollapse: true,\r\n\t\t\t\t\tfirstTipSubmit: true,\r\n\t\t\t\t\tminLength: 1,\r\n\t\t\t\t\tzoom: 10,\r\n\t\t\t\t\tposition: \"bottomright\",\r\n\t\t\t\t},\r\n\t\t\t\tprintControl: {\r\n\t\t\t\t\tposition: 'bottomright',\r\n\t\t\t\t\thideControlContainer: true,\r\n\t\t\t\t\texportOnly: true,\r\n\t\t\t\t\tsizeModes: [ /*'Current',*/ 'A4Portrait', 'A4Landscape'],\r\n\t\t\t\t\t//tileWait: 1200,\r\n\t\t\t\t},\r\n\t\t\t\tresizerControl: {\r\n\t\t\t\t\tdirection: 's'\r\n\t\t\t\t},\r\n\t\t\t\tdisableDefaultUI: false,\r\n\t\t\t\t// TODO: pluginsBaseURL: 'https://unpkg.com/',\r\n\t\t\t\tplugins: [\r\n\t\t\t\t\t// \"@raruto/leaflet-elevation@0.4.5/leaflet-elevation.css\",\r\n\t\t\t\t\t// \"@raruto/leaflet-elevation@0.4.5/leaflet-elevation.js\",\r\n\t\t\t\t\t// \"leaflet-kmz@0.3.1/dist/leaflet-kmz.js\",\r\n\t\t\t\t\t// \"leaflet-transparency@0.0.5/leaflet-transparency.min.js\"\r\n\t\t\t\t],\r\n\t\t\t\t_isMiniMap: false, // used to prevent infinite loops when loading the minimap control.\r\n\t\t\t};\r\n\r\n\t\t\t// See \"default_options\" for a complete list of allowed values.\r\n\t\t\tL.Map.mergeOptions({\r\n\t\t\t\tmapTypeId: 'streets',\r\n\t\t\t\tmapTypeIds: ['streets', 'terrain', 'satellite', 'topo'],\r\n\t\t\t\tmapTypes: undefined,\r\n\t\t\t\tgestureHandling: true,\r\n\t\t\t\tvisualClick: true,\r\n\t\t\t\tzoomControl: true,\r\n\t\t\t\tscaleControl: true,\r\n\t\t\t\tpegmanControl: true,\r\n\t\t\t\tlocateControl: true,\r\n\t\t\t\tfullscreenControl: true,\r\n\t\t\t\tlayersControl: true,\r\n\t\t\t\tminimapControl: true,\r\n\t\t\t\teditInOSMControl: true,\r\n\t\t\t\tloadingControl: true,\r\n\t\t\t\tsearchControl: true,\r\n\t\t\t\tprintControl: false,\r\n\t\t\t\tresizerControl: false,\r\n\t\t\t\tdisableDefaultUI: false,\r\n\t\t\t\tincludeLeafletCSS: true,\r\n\t\t\t\tincludeLeafletUICSS: true,\r\n\t\t\t\tapiKeys: undefined, // eg. { thunderforest: \"\", google: \"\", ... }\r\n\t\t\t\t_isMiniMap: false, // used to prevent infinite loops when loading the minimap control.\r\n\t\t\t});\r\n\r\n\t\t\t// Customize leaflet Map default aspect.\r\n\t\t\tL.Map.addInitHook(function() {\r\n\t\t\t\tdisableDefaultUI.call(this);\r\n\t\t\t\tif (this.options._isMiniMap) {\r\n\t\t\t\t\treturn; // prevent infinite loops when loading the minimap control.\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.options.disableDefaultUI) {\r\n\t\t\t\t\tsetDefaultOptions.call(this);\r\n\t\t\t\t\tinitMap.call(this);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Disable leaflet map default controls.\r\n\t\t\tfunction disableDefaultUI() {\r\n\t\t\t\tif (this.zoomControl) this.zoomControl.remove();\r\n\t\t\t\tif (this.rotateControl) this.rotateControl.remove();\r\n\t\t\t\tif (this.fullscreenControl && this.options.fullscreenControl && !this.options.zoomControl) this.fullscreenControl.remove();\r\n\t\t\t\tif (this.searchControl && this.options.searchControl) this.searchControl.remove();\r\n\t\t\t\tif (this.attributionControl) this.attributionControl.remove();\r\n\t\t\t}\r\n\r\n\t\t\t// Deep merge \"default_options\" and do some sanity check.\r\n\t\t\tfunction setDefaultOptions() {\r\n\t\t\t\tlet opts = this.options;\r\n\r\n\t\t\t\t// Recursive merge leaflet map options.\r\n\t\t\t\tfor (let i in default_options) {\r\n\t\t\t\t\tif (opts[i] === true || typeof opts[i] === \"undefined\") {\r\n\t\t\t\t\t\topts[i] = default_options[i];\r\n\t\t\t\t\t} else if (typeof this.options[i] === \"object\" && opts[i] instanceof Array === false) {\r\n\t\t\t\t\t\topts[i] = deepMerge(default_options[i], opts[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set deafult tile providers Api Keys (if any).\r\n\t\t\t\tif (opts.apiKeys) {\r\n\t\t\t\t\tif (opts.apiKeys.thunderforest) {\r\n\t\t\t\t\t\topts.mapTypes.atlas.options.apikey   = opts.apiKeys.thunderforest;\r\n\t\t\t\t\t\topts.mapTypes.terrain.options.apikey = opts.apiKeys.thunderforest;\r\n\t\t\t\t\t\topts.mapTypes.cycle.options.apikey   = opts.apiKeys.thunderforest;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (opts.apiKeys.google) {\r\n\t\t\t\t\t\topts.pegmanControl.apiKey = opts.apiKeys.google;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Append Api Keys (query string).\r\n\t\t\t\tfor (let k of ['atlas', 'terrain', 'cycle']) {\r\n\t\t\t\t\tif (opts.mapTypes[k].options.apikey && opts.mapTypes[k].url.indexOf('apikey=') === -1) {\r\n\t\t\t\t\t\topts.mapTypes[k].url += (opts.mapTypes[k].url.indexOf('?') === -1 ? '?' : '&') + 'apikey={apikey}';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Fix default mapTypeId if missing in mapTypeIds array.\r\n\t\t\t\tif (opts.mapTypeIds.includes(opts.mapTypeId) === false && opts.mapTypeIds.length > 0) {\r\n\t\t\t\t\topts.mapTypeId = opts.mapTypeIds[0];\r\n\t\t\t\t}\r\n\t\t\t\t// Auto detect user \"querylang\" value when using search control.\r\n\t\t\t\tif (opts.searchControl && opts.searchControl.detectUserLang) {\r\n\t\t\t\t\topts.searchControl.querylang = window.navigator.languages ? window.navigator.languages[0] : (window.navigator.userLanguage || window.navigator.language);\r\n\t\t\t\t}\r\n\t\t\t\t// Replace default \"querylang\" value when using search control.\r\n\t\t\t\tif (opts.searchControl && opts.searchControl.querylang) {\r\n\t\t\t\t\topts.searchControl.url = opts.searchControl.url.replace('{querylang}', opts.searchControl.querylang);\r\n\t\t\t\t}\r\n\t\t\t\t// Avoid missing center/zoom values when using minimap control.\r\n\t\t\t\tif (opts.minimapControl && !opts.center && !opts.zoom) {\r\n\t\t\t\t\tthis.setView([0, 0], 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Initialize default leaflet map controls and layers.\r\n\t\t\tfunction initMap() {\r\n\t\t\t\tlet controls = {},\r\n\t\t\t\t\tlayers   = {},\r\n\t\t\t\t\tbaseMaps = {},\r\n\t\t\t\t\topts     = this.options;\r\n\r\n\t\t\t\t// Gesture Handling.\r\n\t\t\t\tif (opts.gestureHandling) {\r\n\t\t\t\t\tthis.gestureHandling.enable();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Load all user selected layers.\r\n\t\t\t\tfor (let i in opts.mapTypeIds) {\r\n\t\t\t\t\tlet id = opts.mapTypeIds[i];\r\n\t\t\t\t\tif (opts.mapTypes[id]) {\r\n\t\t\t\t\t\tbaseMaps[opts.mapTypes[id].name] = layers[id] = new L.TileLayer(opts.mapTypes[id].url, opts.mapTypes[id].options);\r\n\t\t\t\t\t\tlayers[id].mapTypeId = id; // save mapTypeId for easy access.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Keep a reference of previous mapTypeId\r\n\t\t\t\tthis._lastMapTypeId = opts.mapTypeId;\r\n\t\t\t\tthis._prevMapTypeId = opts.mapTypeId;\r\n\t\t\t\tthis.on('baselayerchange', function(e) {\r\n\t\t\t\t\tif (e && e.layer && e.layer.mapTypeId) {\r\n\t\t\t\t\t\tthis._prevMapTypeId = this._lastMapTypeId;\r\n\t\t\t\t\t\tthis._lastMapTypeId = e.layer.mapTypeId;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Keep default baselayers to the lower level\r\n\t\t\t\tthis.on('baselayerchange', function(e) {\r\n\t\t\t\t\tif (e && e.layer && e.layer.mapTypeId && e.layer.bringToBack) e.layer.bringToBack();\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Layers Control.\r\n\t\t\t\tif (opts.layersControl) {\r\n\t\t\t\t\tcontrols.layers = new L.Control.Layers(baseMaps, null, opts.layersControl);\r\n\t\t\t\t\tthis.on('zoomend', autoToggleSatelliteLayer, this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Attribution Control.\r\n\t\t\t\tif (opts.attributionControl && this.attributionControl) {\r\n\t\t\t\t\tthis.attributionControl.addTo(this);\r\n\t\t\t\t\tcontrols.attribution = this.attributionControl;\r\n\t\t\t\t\tthis.on('baselayerchange', L.bind(updateLeafletAttribution, this, this.attributionControl.options.prefix));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Edit in OSM link.\r\n\t\t\t\tif (opts.editInOSMControl) {\r\n\t\t\t\t\tcontrols.editInOSM = new L.Control.EditInOSM(opts.editInOSMControl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Scale Control.\r\n\t\t\t\tif (opts.scaleControl) {\r\n\t\t\t\t\tcontrols.scale = new L.Control.Scale(opts.scaleControl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Zoom Control.\r\n\t\t\t\tif (opts.zoomControl && this.zoomControl) {\r\n\t\t\t\t\tthis.zoomControl.setPosition(opts.zoomControl.position);\r\n\t\t\t\t\tthis.zoomControl.addTo(this);\r\n\t\t\t\t\tcontrols.zoom = this.zoomControl;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Rotate Control.\r\n\t\t\t\tif (opts.rotateControl && this.rotateControl) {\r\n\t\t\t\t\tthis.rotateControl.setPosition(opts.rotateControl.position);\r\n\t\t\t\t\tthis.rotateControl.addTo(this);\r\n\t\t\t\t\tcontrols.rotate = this.rotateControl;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Pegman Control.\r\n\t\t\t\tif (opts.pegmanControl) {\r\n\t\t\t\t\tcontrols.pegman = new L.Control.Pegman(opts.pegmanControl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Locate Control.\r\n\t\t\t\tif (opts.locateControl) {\r\n\t\t\t\t\tcontrols.locate = new L.Control.Locate(opts.locateControl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Search Control.\r\n\t\t\t\tif (opts.searchControl) {\r\n\t\t\t\t\tcontrols.search = this.searchControl = new L.Control.Search(opts.searchControl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Print Control.\r\n\t\t\t\tif (opts.printControl) {\r\n\t\t\t\t\tcontrols.print = new L.Control.EasyPrint(opts.printControl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Loading Control.\r\n\t\t\t\tif (opts.loadingControl) {\r\n\t\t\t\t\tcontrols.loading = new L.Control.Loading(opts.loadingControl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Fullscreen Control.\r\n\t\t\t\tif (opts.fullscreenControl) {\r\n\t\t\t\t\tcontrols.fullscreen = this.fullscreenControl = new L.Control.FullScreen(opts.fullscreenControl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Minimap Control.\r\n\t\t\t\tif (opts.minimapControl) {\r\n\t\t\t\t\tlet miniMapTypeId = opts.minimapControl.mapOptions.mapTypeId;\r\n\t\t\t\t\tlet miniMapLayer  = opts.mapTypes[miniMapTypeId];\r\n\t\t\t\t\tif (miniMapLayer) {\r\n\t\t\t\t\t\tminiMapLayer = new L.TileLayer(miniMapLayer.url, miniMapLayer.options);\r\n\t\t\t\t\t\tminiMapLayer.mapTypeId = miniMapTypeId; // save mapTypeId for easy access.\r\n\t\t\t\t\t\tcontrols.minimap = new L.Control.MiniMap(miniMapLayer, opts.minimapControl);\r\n\t\t\t\t\t\tcontrols.minimap._mainMapBaseLayers = baseMaps; // save baseMaps for easy access.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Resizer Control.\r\n\t\t\t\tif (opts.resizerControl) {\r\n\t\t\t\t\tcontrols.resizer = new L.Control.Resizer(opts.resizerControl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Load all user selected controls.\r\n\t\t\t\tfor (let i in controls) {\r\n\t\t\t\t\tif (controls[i].addTo) {\r\n\t\t\t\t\t\tcontrols[i].addTo(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.controls = controls; // save controls for easy access.\r\n\r\n\t\t\t\t// Fire idle event.\r\n\t\t\t\tthis.whenReady(function() {\r\n\t\t\t\t\tthis.fire('idle');\r\n\t\t\t\t\t// Prevent adding multiple default base layers when using multiple maps.\r\n\t\t\t\t\tif (opts.mapTypeId) {\r\n\t\t\t\t\t\tlet baseLayer = opts.mapTypes[opts.mapTypeId];\r\n\t\t\t\t\t\tif (baseLayer && baseMaps[baseLayer.name]) {\r\n\t\t\t\t\t\t\topts.layers = opts.layers.filter(item => item._leaflet_id !== baseMaps[baseLayer.name]._leaflet_id);\r\n\t\t\t\t\t\t\tlet layer = baseMaps[baseLayer.name];\r\n\t\t\t\t\t\t\tif (layer.setZIndex) layer.setZIndex(0);\r\n\t\t\t\t\t\t\telse if (layer.bringToBack) layer.bringToBack();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\t// Set default base layer.\r\n\t\t\t\tif (opts.mapTypeId) {\r\n\t\t\t\t\tlet baseLayer = opts.mapTypes[opts.mapTypeId];\r\n\t\t\t\t\tif (baseLayer && baseMaps[baseLayer.name]) {\r\n\t\t\t\t\t\topts.layers.unshift(baseMaps[baseLayer.name]); // Add to the array of layers that will be automatically loaded within the map initially.\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Load custom plugins.\r\n\t\t\t\tif (opts.plugins) {\r\n\t\t\t\t\tif (!lazyLoader.loader) {\r\n\t\t\t\t\t\tlet core_plugins = [];\r\n\t\t\t\t\t\tif (opts.includeLeafletUICSS) {\r\n\t\t\t\t\t\t\tcore_plugins.unshift(\"leaflet-ui@\" + currentVersion + \"/dist/leaflet-ui.css\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!window.L) {\r\n\t\t\t\t\t\t\tcore_plugins.unshift(\"leaflet@1.3.4/dist/leaflet.css\");\r\n\t\t\t\t\t\t\tcore_plugins.unshift(\"leaflet@1.3.4/dist/leaflet.js\");\r\n\t\t\t\t\t\t} else if (opts.includeLeafletCSS && L.version) {\r\n\t\t\t\t\t\t\tlet core_css_url = \"leaflet@\" + L.version + \"/dist/leaflet.css\";\r\n\t\t\t\t\t\t\tlet core_css_exists = false;\r\n\t\t\t\t\t\t\tfor (let i = 0; i < document.styleSheets.length; i++) {\r\n\t\t\t\t\t\t\t\tif (document.styleSheets[i].href && document.styleSheets[i].href.indexOf(core_css_url) > 0) {\r\n\t\t\t\t\t\t\t\t\tcore_css_exists = true;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (!core_css_exists) {\r\n\t\t\t\t\t\t\t\tcore_plugins.unshift(core_css_url);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlazyLoader.loader = lazyLoader.loadSyncScripts([core_plugins, opts.plugins]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Lazy load initHooks\r\n\t\t\t\t\tif (this._initHooks) {\r\n\t\t\t\t\t\tlet initHooks = this._initHooks.length;\r\n\t\t\t\t\t\tthis.once('plugins_loaded', function() {\r\n\t\t\t\t\t\t\tif (initHooks < this._initHooks.length)\r\n\t\t\t\t\t\t\t\tfor (let i = initHooks, len = this._initHooks.length; i < len; i++) {\r\n\t\t\t\t\t\t\t\t\tthis._initHooks[i].call(this);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.fire('initHooks_called');\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlazyLoader.loader.then(() => this.fire('plugins_loaded'));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Conditionally show leaflet attribution when showing GoogleMutant tiles\r\n\t\t\tfunction updateLeafletAttribution(defaultAttribution, e) {\r\n\t\t\t\tif (e && e.layer) {\r\n\t\t\t\t\tthis.attributionControl.setPrefix((L.GridLayer.GoogleMutant && e.layer instanceof L.GridLayer.GoogleMutant) ? false : defaultAttribution);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Automatically show satellite layer at higher zoom levels\r\n\t\t\tfunction autoToggleSatelliteLayer(e) {\r\n\t\t\t\tlet zoom = this.getZoom();\r\n\t\t\t\tlet control = this.controls.layers;\r\n\t\t\t\tlet inputs = control._layerControlInputs;\r\n\r\n\t\t\t\tfor (let i in inputs) {\r\n\t\t\t\t\tlet input = inputs[i];\r\n\t\t\t\t\tlet layer = control._getLayer(input.layerId).layer;\r\n\t\t\t\t\tlet mapTypeId = layer.mapTypeId;\r\n\t\t\t\t\tif (mapTypeId == \"satellite\") {\r\n\t\t\t\t\t\tif (zoom >= 18 && !layer._map && !layer._isAutoToggled) {\r\n\t\t\t\t\t\t\tlayer._isAutoToggled = true;\r\n\t\t\t\t\t\t\tinput.click();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if (zoom < 18 && layer._map && layer._isAutoToggled) {\r\n\t\t\t\t\t\t\tfor (let j in inputs) {\r\n\t\t\t\t\t\t\t\tlet input = inputs[j];\r\n\t\t\t\t\t\t\t\tlet layer = control._getLayer(input.layerId).layer;\r\n\t\t\t\t\t\t\t\tlet mapTypeId = layer.mapTypeId;\r\n\t\t\t\t\t\t\t\tif (mapTypeId == this._prevMapTypeId) {\r\n\t\t\t\t\t\t\t\t\tinput.click();\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlayer._isAutoToggled = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if (zoom < 18 && !layer._map && layer._isAutoToggled) {\r\n\t\t\t\t\t\t\tlayer._isAutoToggled = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet minimapProto = L.Control.MiniMap.prototype;\r\n\t\t\tlet onAddMinimapProto = minimapProto.onAdd;\r\n\r\n\t\t\t// Customize MiniMap default core behavior.\r\n\t\t\tL.Control.MiniMap.include({\r\n\t\t\t\tonAdd: function(map) {\r\n\t\t\t\t\tlet container = onAddMinimapProto.call(this, map);\r\n\r\n\t\t\t\t\t// Disable mouse handlers\r\n\t\t\t\t\tif (this._miniMap) {\r\n\t\t\t\t\t\tthis._miniMap.doubleClickZoom.disable();\r\n\t\t\t\t\t\tthis._miniMap.touchZoom.disable();\r\n\t\t\t\t\t\tthis._miniMap.scrollWheelZoom.disable();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Automatically switch between \"satellite\" and \"roads\" layers.\r\n\t\t\t\t\tif (this.options.toggleMapTypes) {\r\n\t\t\t\t\t\tL.DomEvent.on(map, 'baselayerchange', this._handleMainMapTypeChange, this);\r\n\t\t\t\t\t\tL.DomEvent.on(this._container, 'click', this._handleMiniMapTypeToggle, this);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn container;\r\n\t\t\t\t},\r\n\t\t\t\t_handleMainMapTypeChange: function(e) {\r\n\t\t\t\t\tif (!this._handligMiniMapTypeToggle) {\r\n\t\t\t\t\t\tif (e && e.layer) {\r\n\t\t\t\t\t\t\tlet minimap = this,\r\n\t\t\t\t\t\t\t\tmainmap = this._mainMap,\r\n\t\t\t\t\t\t\t\tminiMapTypeId = minimap._layer.mapTypeId,\r\n\t\t\t\t\t\t\t\tmainMapTypeId = e.layer.mapTypeId;\r\n\r\n\r\n\t\t\t\t\t\t\tif (mainmap.options.mapTypeIds.length > 0 && inArray(mainmap.options.mapTypeIds, mainMapTypeId)) {\r\n\t\t\t\t\t\t\t\tif (mainMapTypeId != miniMapTypeId) {\r\n\t\t\t\t\t\t\t\t\tminimap._lastMapTypeId = mainMapTypeId;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlet mapTypeId,\r\n\t\t\t\t\t\t\t\t\tminiMapLayer;\r\n\r\n\t\t\t\t\t\t\t\tif (mainMapTypeId == \"satellite\" && miniMapTypeId == \"satellite\") {\r\n\t\t\t\t\t\t\t\t\tmapTypeId = minimap._lastMapTypeId;\r\n\t\t\t\t\t\t\t\t} else if (mainMapTypeId != \"satellite\" && miniMapTypeId != \"satellite\") {\r\n\t\t\t\t\t\t\t\t\tmapTypeId = \"satellite\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tminiMapLayer = mainmap.options.mapTypes[mapTypeId];\r\n\r\n\t\t\t\t\t\t\t\tif (miniMapLayer) {\r\n\t\t\t\t\t\t\t\t\tminiMapLayer = new L.TileLayer(miniMapLayer.url, miniMapLayer.options);\r\n\t\t\t\t\t\t\t\t\tminiMapLayer.mapTypeId = mapTypeId; // save mapTypeId for easy access.\r\n\t\t\t\t\t\t\t\t\tminimap._lastMapTypeId = miniMapTypeId;\r\n\t\t\t\t\t\t\t\t\tminimap.changeLayer(miniMapLayer);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t_handleMiniMapTypeToggle: function() {\r\n\t\t\t\t\tthis._handligMiniMapTypeToggle = true;\r\n\t\t\t\t\tif (this._layer && this._mainMapBaseLayers) {\r\n\t\t\t\t\t\tlet minimap = this,\r\n\t\t\t\t\t\t\tmainmap = this._mainMap,\r\n\t\t\t\t\t\t\tminiMapTypeId = this._layer.mapTypeId,\r\n\t\t\t\t\t\t\tmainMapTypeId;\r\n\t\t\t\t\t\tfor (let i in this._mainMapBaseLayers) {\r\n\t\t\t\t\t\t\tif (mainmap.hasLayer(this._mainMapBaseLayers[i]) && miniMapTypeId != this._mainMapBaseLayers[i].mapTypeId) {\r\n\t\t\t\t\t\t\t\tmainMapTypeId = this._mainMapBaseLayers[i].mapTypeId;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (mainmap.options.mapTypeIds.length > 0 && inArray(mainmap.options.mapTypeIds, miniMapTypeId)) {\r\n\t\t\t\t\t\t\tlet mapTypeId,\r\n\t\t\t\t\t\t\t\tminiMapLayer;\r\n\r\n\t\t\t\t\t\t\tmapTypeId = minimap._lastMapTypeId || mainmap.options.mapTypeId;\r\n\r\n\t\t\t\t\t\t\tif (minimap._lastMapTypeId != \"satellite\" && miniMapTypeId != \"satellite\") {\r\n\t\t\t\t\t\t\t\tmapTypeId = \"satellite\";\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tminiMapLayer = mainmap.options.mapTypes[mapTypeId];\r\n\r\n\t\t\t\t\t\t\tif (miniMapLayer) {\r\n\t\t\t\t\t\t\t\tminiMapLayer = new L.TileLayer(miniMapLayer.url, miniMapLayer.options);\r\n\t\t\t\t\t\t\t\tminiMapLayer.mapTypeId = mapTypeId; // save mapTypeId for easy access.\r\n\t\t\t\t\t\t\t\tminimap._lastMapTypeId = miniMapTypeId;\r\n\r\n\t\t\t\t\t\t\t\tminimap.changeLayer(miniMapLayer);\r\n\r\n\t\t\t\t\t\t\t\tfor (let i in this._mainMapBaseLayers) {\r\n\t\t\t\t\t\t\t\t\tthis._mainMapBaseLayers[i].remove();\r\n\t\t\t\t\t\t\t\t\tif (minimap._lastMapTypeId == this._mainMapBaseLayers[i].mapTypeId) {\r\n\t\t\t\t\t\t\t\t\t\tthis._mainMapBaseLayers[i].addTo(mainmap);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._handligMiniMapTypeToggle = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\t// Check if an array contains any element from another one.\r\n\t\t\tfunction inArray(array, items) {\r\n\t\t\t\treturn array.some(r => items.includes(r));\r\n\t\t\t}\r\n\r\n\t\t\t// Simple object check.\r\n\t\t\tfunction isObject(item) {\r\n\t\t\t\treturn (item && typeof item === 'object' && !Array.isArray(item));\r\n\t\t\t}\r\n\r\n\t\t\t// Deep merge two objects (note: circular references not supported).\r\n\t\t\tfunction deepMerge(target, ...sources) {\r\n\t\t\t\tif (!sources.length) return target;\r\n\t\t\t\tconst source = sources.shift();\r\n\t\t\t\tif (isObject(target) && isObject(source)) {\r\n\t\t\t\t\tfor (const key in source) {\r\n\t\t\t\t\t\tif (isObject(source[key])) {\r\n\t\t\t\t\t\t\tif (!target[key]) Object.assign(target, {\r\n\t\t\t\t\t\t\t\t[key]: {}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tdeepMerge(target[key], source[key]);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tObject.assign(target, {\r\n\t\t\t\t\t\t\t\t[key]: source[key]\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn deepMerge(target, ...sources);\r\n\t\t\t}\r\n\r\n\t\t})();\r\n\r\n\t});"],"names":["base_url","Promise","all","import","then","proto","L","i18n","bind","_","string","data","locale","locales","call","currentScript","document","currentVersion","split","trim","lazyLoader","baseURL","loadSyncScripts","urls","reduce","prev","curr","loadAsyncScripts","resolve","map","url","loadScript","reject","type","pop","tag","script","createElement","head","root_script","contains","lastChild","prev_tag","prev_link","indexOf","rel","addEventListener","once","setAttribute","parentNode","nextSibling","insertBefore","appendChild","default_options","mapTypes","atlas","name","options","maxZoom","maxNativeZoom","attribution","streets","cycle","terrain","satellite","topo","zoomControl","position","rotateControl","scaleControl","width","imperial","pegmanControl","theme","locateControl","fullscreenControl","title","titleCancel","forceSeparateButton","layersControl","inline","minimapControl","toggleDisplay","toggleMapTypes","height","aimingRectOptions","color","weight","opacity","fillOpacity","shadowRectOptions","mapOptions","mapTypeId","gestureHandling","searchControl","loadingControl","_isMiniMap","editInOSMControl","separate","querylang","detectUserLang","jsonpParam","propertyName","propertyLoc","markerLocation","autoType","autoCollapse","firstTipSubmit","minLength","zoom","printControl","hideControlContainer","exportOnly","sizeModes","resizerControl","direction","disableDefaultUI","plugins","this","remove","attributionControl","setDefaultOptions","opts","i","Array","deepMerge","apiKeys","thunderforest","apikey","google","apiKey","k","mapTypeIds","includes","length","window","navigator","languages","userLanguage","language","replace","center","setView","initMap","controls","layers","baseMaps","enable","id","TileLayer","_lastMapTypeId","_prevMapTypeId","on","e","layer","bringToBack","Control","Layers","autoToggleSatelliteLayer","addTo","updateLeafletAttribution","prefix","editInOSM","EditInOSM","scale","Scale","setPosition","rotate","pegman","Pegman","locate","Locate","search","Search","print","EasyPrint","loading","Loading","fullscreen","FullScreen","miniMapTypeId","miniMapLayer","minimap","MiniMap","_mainMapBaseLayers","resizer","Resizer","whenReady","fire","baseLayer","filter","item","_leaflet_id","setZIndex","unshift","loader","core_plugins","includeLeafletUICSS","includeLeafletCSS","version","core_css_url","core_css_exists","styleSheets","href","_initHooks","initHooks","len","defaultAttribution","setPrefix","GridLayer","GoogleMutant","getZoom","control","inputs","_layerControlInputs","input","_getLayer","layerId","_map","_isAutoToggled","click","j","Map","mergeOptions","undefined","visualClick","addInitHook","onAddMinimapProto","prototype","onAdd","inArray","array","items","some","r","isObject","isArray","target","sources","source","shift","key","Object","assign","[object Object]","include","container","_miniMap","doubleClickZoom","disable","touchZoom","scrollWheelZoom","DomEvent","_handleMainMapTypeChange","_container","_handleMiniMapTypeToggle","_handligMiniMapTypeToggle","mainmap","_mainMap","_layer","mainMapTypeId","changeLayer","hasLayer"],"mappings":"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"}